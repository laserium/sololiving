plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.5'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com.sololiving'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	asciidoctorExt
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// STARTER DEFAULT
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// MYBATIS
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'

	// SSH Library
	implementation 'com.jcraft:jsch:0.1.55'

	// ASPECT AOP
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.aspectj:aspectjweaver'

	// LOG
	implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'

	// Thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// Configuration Properties
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation 'org.springframework.boot:spring-boot-configuration-processor'

	// WebFlux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6' 

	// OAuth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// Email
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// Spring REST Docs
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

ext {
	snippetsDir = file('build/generated-snippets')
}

task createGeneratedSnippetsDir {
    doLast {
        file(snippetsDir).mkdirs()
    }
}

asciidoctor {
    configurations 'asciidoctorExt'
    baseDirFollowsSourceFile()
    inputs.dir snippetsDir
    dependsOn test
    doFirst {
        delete file('src/main/resources/static/docs')
    }
    doLast {
        copy {
            from file('build/docs/asciidoc')
            into file('src/main/resources/static/docs')
        }
    }
}

test {
    useJUnitPlatform()
    outputs.dir snippetsDir
}

tasks.named('build') {
    dependsOn asciidoctor
}

springBoot {
    mainClass = 'com.sololiving.SoloLivingApiApplication'
}